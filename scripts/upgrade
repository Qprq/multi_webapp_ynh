#!/bin/bash

source .fonctions	# Charge les fonctions génériques habituellement utilisées dans le script

# Récupère les infos de l'application.
app=$YNH_APP_INSTANCE_NAME

# Source app helpers
source /usr/share/yunohost/helpers

domain=$(ynh_app_setting_get $app domain)
admin=$(ynh_app_setting_get $app ftp_user)
is_public=$(ynh_app_setting_get $app is_public)
appname=$(ynh_app_setting_get $app appname)
if test -z "$appname"
then	# Si appname est vide, le nom de l'app est stocké sous l'ancien nom app
	appname=$(ynh_app_setting_get $app app)	# On Récupère l'information.
	ynh_app_setting_delete $app app	# On supprime l'ancienne information.
	ynh_app_setting_set $app appname $app	# Pour la remplacer par la nouvelle.
fi

# CHECK_PATH	# Vérifie et corrige la syntaxe du path.
# parent_dir=/var/www/webapp_$user
# netftp_path=/ftp_webapp_$user


# Modify Nginx configuration file and copy it to Nginx conf directory
# sed -i "s@__PATHTOCHANGE__@$path@g" ../conf/nginx.conf
# sed -i "s@__FINALPATH__@$final_path/@g" ../conf/nginx.conf
# sed -i "s@__NAMETOCHANGE__@$appname@g" ../conf/nginx.conf
# sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$appname.conf

# Make app public if necessary
if [ "$is_public" = "Yes" ];
then
    ynh_app_setting_set $app skipped_uris "/"
fi

# app=$appname	# Utilise appname pour FPM
# POOL_FPM	# Créer le fichier de configuration du pool php-fpm et le configure.

# Recharge la configuration Nginx
sudo service nginx reload
# Régénère la configuration de SSOwat
sudo yunohost app ssowatconf
